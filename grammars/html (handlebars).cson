'fileTypes': [
  'hbs'
  'hdbs'
  'handlebars'
]
'name': 'HTML (Handlebars)'
'patterns': [

  # Comments
  {
    'begin': '\\{\\{!--'
    'end': '--\\}\\}'
    'name': 'comment.block.handlebars'
  }
  {
    'begin': '\\{\\{!'
    'end': '\\}\\}$'
    'name': 'comment.block.handlebars'
  }

  # Escape
  {
    'begin': '\\{\\{\\{~?'
    'end': '~?\\}\\}\\}'
    'captures':
      '0':
        'name': 'entity.name.tag.handlebars'
    'name': 'meta.tag.template.raw.handlebars'
  }

  # Contextual Components and "Slashy" Components
  {
    'begin': '\\{\\{~?(\\w[\\w\/-]*)[\\.\/](\\w[\\w\/-]*)'
    'beginCaptures':
      '0':
        'name': 'entity.name.tag.handlebars'
      '1':
        'name': 'entity.name.function.handlebars'
      '2':
        'name': 'entity.name.function.handlebars'
    'end': '~?\\}\\}'
    'endCaptures':
      '0':
        'name': 'entity.name.tag.handlebars'
    'name': 'meta.tag.template.handlebars'
    'patterns': [
      {
        'include': '#generic-attribute'
      }
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
    ]
  }

  # Helpers
  {
    'begin': '\\{\\{~?(\\w[\\w\/-]*\\s|else)'
    'beginCaptures':
      '0':
        'name': 'entity.name.tag.handlebars'
      '1':
        'name': 'entity.name.function.handlebars'
    'end': '~?\\}\\}'
    'endCaptures':
      '0':
        'name': 'entity.name.tag.handlebars'
    'name': 'meta.tag.template.handlebars'
    'patterns': [
      {
        'include': '#generic-attribute'
      }
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
    ]
  }

  # Block expressions
  {
    'begin': '\\{\\{~?([#^])(\\w[\\w\/-]*)'
    'beginCaptures':
      '0':
        'name': 'entity.name.tag.handlebars'
      '1':
        'name': 'punctuation.definition.block.begin.handlebars'
      '2':
        'name': 'entity.name.function.handlebars'
    'end': '~?\\}\\}'
    'endCaptures':
      '0':
        'name': 'entity.name.tag.handlebars'
    'name': 'meta.tag.template.handlebars'
    'patterns': [
      {
        'match': '\\s(as|in)\\s'
        'name': 'entity.name.function.handlebars'
      }
      {
        'include': '#generic-attribute'
      }
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
    ]
  }

  # Close - Block expressions
  {
    'begin': '\\{\\{~?(/)(\\w[\\w\/-]*)'
    'beginCaptures':
      '0':
        'name': 'entity.name.tag.handlebars'
      '1':
        'name': 'punctuation.definition.block.end.handlebars'
      '2':
        'name': 'entity.name.function.handlebars'
    'end': '~?\\}\\}'
    'endCaptures':
      '0':
        'name': 'entity.name.tag.handlebars'
    'name': 'meta.tag.template.handlebars'
  }

  # Variables
  {
    'begin': '\\{\\{~?[<>]?'
    'end': '~?\\}\\}'
    'captures':
      '0':
        'name': 'entity.name.tag.handlebars'
    'name': 'meta.tag.template.handlebars'
  }

  {
    'include': 'text.html.basic'
  }
]

'repository':
  'string-double-quoted':
    {
      'begin': '"'
      'beginCaptures':
        '0':
          'name': 'punctuation.definition.string.begin.handlebars'
      'end': '"'
      'endCaptures':
        '0':
          'name': 'punctuation.definition.string.end.handlebars'
      'name': 'string.quoted.double.handlebars'
    }

  'string-single-quoted':
    {
      'begin': '\''
      'beginCaptures':
        '0':
          'name': 'punctuation.definition.string.begin.handlebars'
      'end': '\''
      'endCaptures':
        '0':
          'name': 'punctuation.definition.string.end.handlebars'
      'name': 'string.quoted.single.handlebars'
    }

  'generic-attribute':
    {
      'match': '\\b([a-zA-Z0-9-]+)(=)'
      'captures':
        '0':
          'name': 'meta.tag.template.handlebars'
        '1':
          'name': 'entity.other.attribute-name.handlebars'
      'name': 'entity.other.attribute-name.handlebars'
    }

'scopeName': 'text.html.handlebars'
